name: CI - Django Docker Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13.7'
    
    - name: Instalar dependencias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Ejecutar linter (flake8)
      run: |
        pip install flake8
        # Detener el build si hay errores de sintaxis o nombres indefinidos
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Advertencias para el resto
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      continue-on-error: true
    
    - name: Ejecutar tests de Django
      env:
        POSTGRES_NAME: test_db
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
      run: |
        python manage.py test --no-input
      continue-on-error: true
    
    - name: Build Docker image
      run: |
        docker build -t django-app:${{ github.sha }} .
    
    - name: Verificar imagen Docker
      run: |
        docker images | grep django-app
    
    - name: Test Docker Compose
      run: |
        docker-compose config
        echo "✅ Docker Compose configuración válida"
    
    - name: Notificación de éxito
      if: success()
      run: |
        echo "✅ Build completado exitosamente!"
        echo "Commit: ${{ github.sha }}"
        echo "Branch: ${{ github.ref }}"